{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Practice\\\\Web\\\\React\\\\NextJS\\\\pages\\\\blog.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\"; // 'as' prop of Link tag will replace the url name with the string value passed to 'as' so that we can pass something as query parameter and \n// it will not be visible in the url.\n\nvar PostLink = function PostLink(_ref) {\n  var slug = _ref.slug,\n      title = _ref.title,\n      pathname = _ref.pathname;\n  return __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 2\n    }\n  }, __jsx(Link, {\n    as: \"/\".concat(pathname, \"/\").concat(slug),\n    href: \"/post?title=\".concat(title),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }\n  }, \" \", title)));\n};\n\n_c = PostLink;\n\nvar Blog = function Blog(_ref2) {\n  var asPath = _ref2.router.asPath;\n  console.log({\n    asPath: asPath\n  });\n  return __jsx(Layout, {\n    title: \"My Blog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, __jsx(PostLink, {\n    pathname: asPath,\n    slug: \"react-post\",\n    title: \"React Post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), __jsx(PostLink, {\n    pathname: asPath,\n    slug: \"angular-post\",\n    title: \"Angular Post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), __jsx(PostLink, {\n    pathname: asPath,\n    slug: \"vue-post\",\n    title: \"Vue Post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  })));\n};\n\n_c2 = Blog;\nexport default _c3 = withRouter(Blog);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PostLink\");\n$RefreshReg$(_c2, \"Blog\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["D:/Practice/Web/React/NextJS/pages/blog.js"],"names":["Layout","Link","withRouter","PostLink","slug","title","pathname","Blog","asPath","router","console","log"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CAEA;AACA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,EAAE,aAAQA,QAAR,cAAoBF,IAApB,CAAR;AAAoC,IAAA,IAAI,wBAAmBC,KAAnB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,KAAN,CADD,CADD,CADgB;AAAA,CAAjB;;KAAMF,Q;;AAQN,IAAMI,IAAI,GAAG,SAAPA,IAAO,QACb;AAAA,MAD2BC,MAC3B,SADgBC,MAChB,CAD2BD,MAC3B;AACCE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA,MAAM,EAANA;AAAD,GAAZ;AACA,SACC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAKA,MAAvB;AAAgC,IAAA,IAAI,EAAC,YAArC;AAAkD,IAAA,KAAK,EAAC,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAKA,MAAvB;AAAgC,IAAA,IAAI,EAAC,cAArC;AAAoD,IAAA,KAAK,EAAC,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAKA,MAAvB;AAAgC,IAAA,IAAI,EAAC,UAArC;AAAgD,IAAA,KAAK,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD,CADD;AASA,CAZD;;MAAMD,I;AAcN,qBAAeL,UAAU,CAACK,IAAD,CAAzB","sourcesContent":["import Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n\n// 'as' prop of Link tag will replace the url name with the string value passed to 'as' so that we can pass something as query parameter and \n// it will not be visible in the url.\nconst PostLink = ({ slug, title, pathname }) => (\n\t<li>\n\t\t<Link as = {`/${pathname}/${slug}`} href = {`/post?title=${title}`}>\n\t\t\t<a> { title }</a>\n\t\t</Link>\n\t</li>\n);\n\nconst Blog = ({ router : { asPath }}) => \n{ \n\tconsole.log({asPath})\n\treturn (\n\t\t<Layout title=\"My Blog\">\n\t\t\t<ul>\n\t\t\t\t<PostLink pathname = { asPath } slug=\"react-post\" title=\"React Post\" />\n\t\t\t\t<PostLink pathname = { asPath } slug=\"angular-post\" title=\"Angular Post\" />\n\t\t\t\t<PostLink pathname = { asPath } slug=\"vue-post\" title=\"Vue Post\" />\n\t\t\t</ul>\n\t\t</Layout>\n\t);\n}\n\nexport default withRouter(Blog);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\Web\\\\React\\\\NextJS\\\\pages\\\\about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\"; // import fetch from \"isomorphic-unfetch\";\n\nimport Error from \"./_error\";\nimport { Component } from \"react\";\nexport default class About extends Component {\n  // getInitialProps() is a method we use in Next.js to fetch data fromn the server ( i.e to have a side effects ) instead of componentDidMount\n  // as we can use componentDidMount in class based only but getInitialProps() method can be used with functional component also. \n  // getInitialProps() belongs to the About class ( i.e static ) hence we can use outside the class also. getInitialProps() will addd our\n  // fetched data in props instead of state.\n  static async getInitialProps() {\n    const res = await fetch(\"https://api.github.com/users/gunjan768\");\n    const statusCode = res.status > 200 ? res.status : false;\n    const data = await res.json(); // Here we need to return an object and every key-value pair will get attach to the props instead of state. \n\n    return {\n      user: data,\n      statusCode\n    };\n  }\n\n  render() {\n    const {\n      user,\n      statusCode\n    } = this.props;\n\n    if (statusCode) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      });\n    }\n\n    console.log({\n      user\n    });\n    return __jsx(Layout, {\n      title: \"About\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, user.name), __jsx(\"img\", {\n      src: user.avatar_url,\n      alt: \"Reed\",\n      height: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/Practice/Web/React/NextJS/pages/about.js"],"names":["Layout","Error","Component","About","getInitialProps","res","fetch","statusCode","status","data","json","user","render","props","console","log","name","avatar_url"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CACf;AACC;AACA;AACA;AACA;AACA,eAAaE,eAAb,GACA;AACC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAAvB;AACA,UAAMC,UAAU,GAAGF,GAAG,CAACG,MAAJ,GAAa,GAAb,GAAmBH,GAAG,CAACG,MAAvB,GAAgC,KAAnD;AACA,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB,CAHD,CAKC;;AACA,WAAO;AAAEC,MAAAA,IAAI,EAAEF,IAAR;AAAcF,MAAAA;AAAd,KAAP;AACA;;AAEDK,EAAAA,MAAM,GACN;AACC,UAAM;AAAED,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,QAAuB,KAAKM,KAAlC;;AAEA,QAAGN,UAAH,EAAe;AACd,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAKA,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,MAAAA;AAAD,KAAZ;AACA,WACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACK,IAAV,CADD,EAEC;AAAK,MAAA,GAAG,EAAKL,IAAI,CAACM,UAAlB;AAA+B,MAAA,GAAG,EAAC,MAAnC;AAA0C,MAAA,MAAM,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAMA;;AA7BF","sourcesContent":["import Layout from \"../components/Layout\";\n// import fetch from \"isomorphic-unfetch\";\nimport Error from \"./_error\";\nimport { Component } from \"react\";\n\nexport default class About extends Component \n{\n\t// getInitialProps() is a method we use in Next.js to fetch data fromn the server ( i.e to have a side effects ) instead of componentDidMount\n\t// as we can use componentDidMount in class based only but getInitialProps() method can be used with functional component also. \n\t// getInitialProps() belongs to the About class ( i.e static ) hence we can use outside the class also. getInitialProps() will addd our\n\t// fetched data in props instead of state.\n\tstatic async getInitialProps() \n\t{\n\t\tconst res = await fetch(\"https://api.github.com/users/gunjan768\");\n\t\tconst statusCode = res.status > 200 ? res.status : false;\n\t\tconst data = await res.json();\n\t\t\n\t\t// Here we need to return an object and every key-value pair will get attach to the props instead of state. \n\t\treturn { user: data, statusCode };\n\t}\n\n\trender() \n\t{\n\t\tconst { user, statusCode } = this.props;\n\n\t\tif(statusCode) {\n\t\t\treturn <Error statusCode = { statusCode } />;\n\t\t}\n\t\tconsole.log({user})\n\t\treturn (\n\t\t\t<Layout title=\"About\">\n\t\t\t\t<p>{ user.name }</p>\n\t\t\t\t<img src = { user.avatar_url } alt=\"Reed\" height=\"200px\" />\n\t\t\t</Layout>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}
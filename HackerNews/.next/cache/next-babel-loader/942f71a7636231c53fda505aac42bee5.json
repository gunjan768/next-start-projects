{"ast":null,"code":"var _jsxFileName = \"D:\\\\Practice\\\\Web\\\\React\\\\NextJS\\\\pages\\\\blog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Link from \"next/link\"; // 'as' prop of Link tag will replace the url name with the string value passed to 'as' so that we can pass something as query parameter and \n// it will not be visible in the url.\n\nconst PostLink = ({\n  slug,\n  title\n}) => __jsx(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 2\n  }\n}, __jsx(Link, {\n  as: `/${slug}`,\n  href: `/post?title=${title}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 4\n  }\n}, \" \", title)));\n\nexport default (() => __jsx(Layout, {\n  title: \"My Blog\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 2\n  }\n}, __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, __jsx(PostLink, {\n  slug: \"react-post\",\n  title: \"React Post\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 4\n  }\n}), __jsx(PostLink, {\n  slug: \"angular-post\",\n  title: \"Angular Post\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 4\n  }\n}), __jsx(PostLink, {\n  slug: \"vue-post\",\n  title: \"Vue Post\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 4\n  }\n}))));","map":{"version":3,"sources":["D:/Practice/Web/React/NextJS/pages/blog.js"],"names":["Layout","Link","PostLink","slug","title"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,MAAC,IAAD;AAAM,EAAA,EAAE,EAAK,IAAGD,IAAK,EAArB;AAAwB,EAAA,IAAI,EAAK,eAAcC,KAAM,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAMA,KAAN,CADD,CADD,CADD;;AAQA,gBAAe,MACd,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,MAAC,QAAD;AAAU,EAAA,IAAI,EAAC,YAAf;AAA4B,EAAA,KAAK,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAEC,MAAC,QAAD;AAAU,EAAA,IAAI,EAAC,cAAf;AAA8B,EAAA,KAAK,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,EAGC,MAAC,QAAD;AAAU,EAAA,IAAI,EAAC,UAAf;AAA0B,EAAA,KAAK,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHD,CADD,CADD","sourcesContent":["import Layout from \"../components/Layout\";\nimport Link from \"next/link\";\n\n// 'as' prop of Link tag will replace the url name with the string value passed to 'as' so that we can pass something as query parameter and \n// it will not be visible in the url.\nconst PostLink = ({ slug, title }) => (\n\t<li>\n\t\t<Link as = {`/${slug}`} href = {`/post?title=${title}`}>\n\t\t\t<a> { title }</a>\n\t\t</Link>\n\t</li>\n);\n\nexport default () => (\n\t<Layout title=\"My Blog\">\n\t\t<ul>\n\t\t\t<PostLink slug=\"react-post\" title=\"React Post\" />\n\t\t\t<PostLink slug=\"angular-post\" title=\"Angular Post\" />\n\t\t\t<PostLink slug=\"vue-post\" title=\"Vue Post\" />\n\t\t</ul>\n\t</Layout>\n);"]},"metadata":{},"sourceType":"module"}